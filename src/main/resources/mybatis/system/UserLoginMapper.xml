<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.system.dao.UserLoginDao">

	<select id="get" resultType="com.bootdo.system.domain.UserLoginDO">
		select `user_id`,`username`,`mobile`,`password`,`dept_id`,`status`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_user_login where user_id = #{value}
	</select>

	<select id="getById" resultType="com.bootdo.system.domain.UserLoginDO">
		select * from sys_user_login where username=#{name}
	</select>

	<select id="selectByNamePassword" resultType="int">
		select count(*) from sys_user_login where username=#{username} and password=#{password}
	</select>

	<select id="list" resultType="com.bootdo.system.domain.UserLoginDO">
		select `user_id`,`username`,`mobile`,`password`,`dept_id`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`
		from sys_user_login
		<where>
			<if test="userId != null and userId != ''">and user_id = #{userId}</if>
			<if test="username != null and username != ''">and username = #{username}</if>
			<if test="name != null and name != ''">and username = #{name}</if>
			<if test="password != null and password != ''">and password = #{password}</if>
			<if test="deptId != null and deptId != ''">and dept_id = #{deptId}</if>
			<if test="deptIds != null and deptIds.size() > 0">and dept_id in
				<foreach collection="deptIds" item="item" index="index" separator="," open="(" close=")">
					#{item}
				</foreach>
			</if>
			<if test="mobile != null and mobile != ''">and username = #{mobile}</if>
			<if test="status != null and status != ''">and status = #{status}</if>
			<if test="userIdCreate != null and userIdCreate != ''">and user_id_create = #{userIdCreate}</if>
			<if test="gmtCreate != null and gmtCreate != ''">and gmt_create = #{gmtCreate}</if>
			<if test="gmtModified != null and gmtModified != ''">and gmt_modified = #{gmtModified}</if>
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by user_id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="count" resultType="int">
		select count(*) from sys_user_login
		<where>
			<if test="userId != null and userId != ''">and user_id = #{userId}</if>
			<if test="username != null and username != ''">and username = #{username}</if>
			<if test="name != null and name != ''">and username = #{name}</if>
			<if test="password != null and password != ''">and password = #{password}</if>
			<if test="deptId != null and deptId != ''">and dept_id = #{deptId}</if>
			<if test="deptIds != null and deptIds.size() > 0">and dept_id in
				<foreach collection="deptIds" item="item" index="index" separator="," open="(" close=")">
					#{item}
				</foreach>
			</if>
			<if test="mobile != null and mobile != ''">and mobile = #{mobile}</if>
			<if test="status != null and status != ''">and status = #{status}</if>
			<if test="userIdCreate != null and userIdCreate != ''">and user_id_create = #{userIdCreate}</if>
			<if test="gmtCreate != null and gmtCreate != ''">and gmt_create = #{gmtCreate}</if>
			<if test="gmtModified != null and gmtModified != ''">and gmt_modified = #{gmtModified}</if>
		</where>
	</select>

	<insert id="save" parameterType="com.bootdo.system.domain.UserLoginDO" useGeneratedKeys="true" keyProperty="userId">
		insert into sys_user_login
		(
		`username`,
		`mobile`,
		`password`,
		`dept_id`,
		`status`,
		`user_id_create`,
		`gmt_create`,
		`gmt_modified`
		)
		values
		(
		#{username},
		#{mobile},
		#{password},
		#{deptId},
		#{status},
		#{userIdCreate},
		#{gmtCreate},
		#{gmtModified}
		)
	</insert>

	<update id="update" parameterType="com.bootdo.system.domain.UserLoginDO">
		update sys_user_login
		<set>
			<if test="username != null">`username` = #{username}, </if>
			<if test="mobile != null">`mobile` = #{mobile}, </if>
			<if test="password != null">`password` = #{password}, </if>
			<if test="deptId != null">`dept_id` = #{deptId}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="userIdCreate != null">`user_id_create` = #{userIdCreate}, </if>
			<if test="gmtCreate != null">`gmt_create` = #{gmtCreate}, </if>
			<if test="gmtModified != null">`gmt_modified` = #{gmtModified},</if>
			<if test="missNumber != null">`miss_number` = #{missNumber},</if>
			<if test="missTime != null">`miss_time` = #{missTime},</if>
			<if test="allowTime != null">`allow_time` = #{allowTime}</if>
		</set>
		where user_id = #{userId}
	</update>

	<update id="update1" parameterType="com.bootdo.system.domain.UserLoginDO">
		update sys_user_login
		<set>
			<if test="username != null">`username` = #{username}, </if>
			<if test="mobile != null">`mobile` = #{mobile}, </if>
			<if test="password != null">`password` = #{password}, </if>
			<if test="deptId != null">`dept_id` = #{deptId}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="userIdCreate != null">`user_id_create` = #{userIdCreate}, </if>
			<if test="gmtCreate != null">`gmt_create` = #{gmtCreate}, </if>
			<if test="gmtModified != null">`gmt_modified` = #{gmtModified},</if>
			<if test="missNumber != null">`miss_number` = #{missNumber},</if>
			<if test="missTime != null">`miss_time` = #{missTime},</if>
			<if test="allowTime != null">`allow_time` = #{allowTime}</if>
		</set>
		where user_id = #{userId}
	</update>

	<delete id="remove">
		delete from sys_user_login where user_id = #{value}
	</delete>

	<delete id="batchRemove">
		delete from sys_user_login where user_id in
		<foreach item="userId" collection="array" open="(" separator="," close=")">
			#{userId}
		</foreach>
	</delete>

	<select id="listAllDept" resultType="long">
		select DISTINCT dept_id from sys_user_login
	</select>

</mapper>