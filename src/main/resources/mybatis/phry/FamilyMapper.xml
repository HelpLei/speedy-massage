<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.phry.dao.FamilyDao">

	<select id="get" resultType="com.bootdo.phry.domain.FamilyDO">
		select `family_id`,`user_id`,`family_appellation`,`family_name`,`birth_time`,`Politics_face`,`work_units`,`create_time`,`update_time`,`status` from ph_family where family_id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.phry.domain.FamilyDO">
		select `family_id`,`user_id`,`family_appellation`,`family_name`,`birth_time`,`Politics_face`,`work_units`,`create_time`,`update_time`,`status` from ph_family
        <where>  
		  		  <if test="familyId != null and familyId != ''"> and family_id = #{familyId} </if>
		  		  <if test="userId != null and userId != ''"> and user_id = #{userId} </if>
		  		  <if test="familyAppellation != null and familyAppellation != ''"> and family_appellation = #{familyAppellation} </if>
		  		  <if test="familyName != null and familyName != ''"> and family_name = #{familyName} </if>
		  		  <if test="birthTime != null and birthTime != ''"> and birth_time = #{birthTime} </if>
		  		  <if test="politicsFace != null and politicsFace != ''"> and Politics_face = #{politicsFace} </if>
		  		  <if test="workUnits != null and workUnits != ''"> and work_units = #{workUnits} </if>
		  		  <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
		  		  <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
		  		  <if test="status != null and status != ''"> and status = #{status} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by family_id asc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from ph_family
		 <where>  
		  		  <if test="familyId != null and familyId != ''"> and family_id = #{familyId} </if>
		  		  <if test="userId != null and userId != ''"> and user_id = #{userId} </if>
		  		  <if test="familyAppellation != null and familyAppellation != ''"> and family_appellation = #{familyAppellation} </if>
		  		  <if test="familyName != null and familyName != ''"> and family_name = #{familyName} </if>
		  		  <if test="birthTime != null and birthTime != ''"> and birth_time = #{birthTime} </if>
		  		  <if test="politicsFace != null and politicsFace != ''"> and Politics_face = #{politicsFace} </if>
		  		  <if test="workUnits != null and workUnits != ''"> and work_units = #{workUnits} </if>
		  		  <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
		  		  <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
		  		  <if test="status != null and status != ''"> and status = #{status} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.phry.domain.FamilyDO">
		insert into ph_family
		(
			`user_id`, 
			`family_appellation`, 
			`family_name`, 
			`birth_time`, 
			`Politics_face`, 
			`work_units`, 
			`create_time`, 
			`update_time`, 
			`status`
		)
		values
		(
			#{userId}, 
			#{familyAppellation}, 
			#{familyName}, 
			#{birthTime}, 
			#{politicsFace}, 
			#{workUnits}, 
			#{createTime}, 
			#{updateTime}, 
			#{status}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.phry.domain.FamilyDO">
		update ph_family 
		<set>
			<if test="userId != null">`user_id` = #{userId}, </if>
			<if test="familyAppellation != null">`family_appellation` = #{familyAppellation}, </if>
			<if test="familyName != null">`family_name` = #{familyName}, </if>
			<if test="birthTime != null">`birth_time` = #{birthTime}, </if>
			<if test="politicsFace != null">`Politics_face` = #{politicsFace}, </if>
			<if test="workUnits != null">`work_units` = #{workUnits}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="status != null">`status` = #{status}</if>
		</set>
		where family_id = #{familyId}
	</update>
	
	<delete id="remove">
		delete from ph_family where family_id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from ph_family where family_id in 
		<foreach item="familyId" collection="array" open="(" separator="," close=")">
			#{familyId}
		</foreach>
	</delete>

</mapper>